name: Build Ghost Downloader 3

on:
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      matrix:
        architecture: [x86_64, arm64]
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --timeout=300 -r requirements.txt

      - name: Build with Nuitka
        run: |
          $VERSION = python -c "from app.common.setting import VERSION; print(VERSION)"
          Write-Host "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $env:GITHUB_ENV
          python deploy.py
#          nuitka --module plugins/jy_os_page.py
#          mv jy_os_page*.pyd output/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ghost-Downloader-v${{ env.VERSION }}-Windows-${{ matrix.architecture }}
          path: dist/Ghost-Downloader-3.dist

  build-macos-14-arm:
    strategy:
      matrix:
        architecture: [arm64]
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --timeout=300 -r requirements.txt
          pip install nuitka==2.6.4

      - name: Build with Nuitka
        run: |
          VERSION=$(python3 -c "from app.common.setting import VERSION; print(VERSION)")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          python3 deploy.py
          chmod u+x "dist/Ghost Downloader.app/Contents/MacOS/Ghost Downloader"
          rm -rf "dist/Ghost Downloader.build"

      - name: Create DMG
        run: |
          ln -s /Applications dist/Applications
          hdiutil create -srcfolder "dist/" -volname "Ghost-Downloader-3" -fs HFS+ -fsargs "-c c=64,a=16,e=16" -format UDZO -size 400m "Ghost-Downloader-v${{ env.VERSION }}-macOS-${{ matrix.architecture }}.dmg"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ghost-Downloader-v${{ env.VERSION }}-macOS-${{ matrix.architecture }}
          path: Ghost-Downloader-v${{ env.VERSION }}-macOS-${{ matrix.architecture }}.dmg

  build-macos-13-x86_64:
    strategy:
      matrix:
        architecture: [x86_64]
    runs-on: macos-13
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --timeout=300 -r requirements.txt
          pip install nuitka==2.6.4

      - name: Build with Nuitka
        run: |
          VERSION=$(python3 -c "from app.common.setting import VERSION; print(VERSION)")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          python3 deploy.py
          chmod u+x "dist/Ghost Downloader.app/Contents/MacOS/Ghost Downloader"
          rm -rf "dist/Ghost Downloader.build"

      - name: Create DMG
        run: |
          ln -s /Applications dist/Applications
          hdiutil create -srcfolder "dist/" -volname "Ghost-Downloader-3" -fs HFS+ -fsargs "-c c=64,a=16,e=16" -format UDZO -size 400m "Ghost-Downloader-v${{ env.VERSION }}-macOS-${{ matrix.architecture }}.dmg"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ghost-Downloader-v${{ env.VERSION }}-macOS-${{ matrix.architecture }}
          path: Ghost-Downloader-v${{ env.VERSION }}-macOS-${{ matrix.architecture }}.dmg

  build-ubuntu:
    strategy:
      matrix:
        architecture: [x86_64, arm64]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1-mesa
          pip install --timeout=300 -r requirements.txt
          pip install nuitka==2.6.4

      - name: Build with Nuitka
        run: |
          VERSION=$(python3 -c "from app.common.setting import VERSION; print(VERSION)")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          python deploy.py
#          nuitka --module plugins/jy_os_page.py
#          mkdir -p "output/Ghost-Downloader-3.dist/plugins/"
#          mv jy_os_page*.so "output/Ghost-Downloader-3.dist/plugins/"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ghost-Downloader-v${{ env.VERSION }}-Linux-${{ matrix.architecture }}
          path: dist/Ghost-Downloader-3.dist
